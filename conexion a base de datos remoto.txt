Simulando una conexi√≥n a Bases de Datos remotas
Obtener datos de hosts remotos

dblink

Primero debe verificarse que dblink esta instalado ya que es una extension de postgres y no viene por defecto

Crear la extension dblink que postgres incluye pero no instala por defecto, esta extension debe crearse por cada base de datos individual

CREATE EXTENSION dblink;

-- se deberian dejar espacio despues de cada instruccion ya que  son comandos diferentes
SELECT * FROM
dblink('dbname=remota 
  port=5432 
  host=127.0.0.1 
  user=xxxx 
  password=xxxx',
  'SELECT id, fecha FROM vip;')
  AS datos_remotos(id integer, "date" date);

A la query se le debe dar el formato de como llegaran los datos
Haciendo cruce de datos con una tabla local

SELECT * FROM passenger
JOIN 
dblink('dbname=remota 
  port=5432 
  host=127.0.0.1 
  user=xxxx 
  password=xxxxxxx',
'SELECT id, date FROM vip;')
AS datos_remotos(id integer, "date" date)
ON (passenger.id = datos_remotos.id);
Ya que ambas tablas se cruzan por la columna id, el JOIN se puede hacer con USING(id)

SELECT * FROM passenger
JOIN 
dblink('dbname=remota 
  port=5432 
  host=127.0.0.1 
  user=xxxx 
  password=xxxxxxx',
'SELECT id, date FROM vip;')
AS datos_remotos(id integer, "date" date)
USING(id);
Al usar usign id el query retorna solo una columna de id en lugar de ambas columnas lo cual haria si se usara un ON para realizar el JOIN

Reto
query a la tabla de pasageros desde la tabla remota

-- CREATE EXTENSION dblink;
SELECT * FROM vip
JOIN 
dblink('dbname=transporte 
  port=5432 
  host=127.0.0.1 
  user=xxxxxxx 
  password=xxxxxxxxxxxx',
'SELECT id, name, address, birthdate FROM passenger;')
AS remote_passenger(id INTEGER, name CHARACTER VARYING, address CHARACTER VARYING, birthdate DATE)
USING(id);